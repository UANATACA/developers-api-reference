security: []
tags:
- Users
summary: GET USER
operationId: getUser
description: Get information about an user.
parameters:
- name: id
  in: path
  description: The User's unique identifier
  required: true
  schema:
    type: string
responses:
  "200":
    description: Successful Response
    content:
      application/json:
        schema:
          type: object
          properties:
            pk:
              type: string
              description: The user unique id
            permission_profile:
              type: string
              description: The permission profile id associated to this user
            request:
              type: string
              description: The request id
            rao:
              type: string
              description: The RAO id
        example:
          pk: 36
          permission_profile: 18
          registration_authority: 41
          request: 787
  "500":
    description: Invalid or missing parameters | Permission denied
    content:
      application/json:
        schema:
          type: object
          properties:
            code:
              type: string
              description: The response status code
            id:
              type: string
              description: The response status id
            error:
              type: string
              description: The response status message
        example:
          code: "500"
          id: 7710a1144589dcd4
          error: User matching query does not exist.