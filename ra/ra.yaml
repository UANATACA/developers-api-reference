openapi: 3.0.1
info:
  title: UANATACA RA API DOCUMENTATION
  version: v1
  x-logo:
    url: https://raw.githubusercontent.com/UANATACA/RA-REPO/main/img/ra_logo.png?token=GHSAT0AAAAAABQU64XWNG7FWNNNNTPDI36GYPIDJQA
    altText: RA logo
servers:
- url: https://api.uanataca.com
tags:
- name: Registration Authority
  description: ""
- name: Registration Authority Officer
  description: ""
- name: Users
  description: ""
- name: Scratchcards
  description: ""
- name: Requests
  description: ""
- name: eIDAS VideoID
  description: ""
- name: External VideoID
  description: ""
  
paths:
  /api/v1/requests:
    get:
      tags:
        - "Requests"
      security: []
      summary: LIST REQUEST
      operationId: listRequest
      description: Retrieves the list of requests stored. Path parameters are only necessary if an explicit filter is wanted.
      parameters:
        - $ref: './llamadas/request/list-request/parameters.yaml#/0'
        - $ref: './llamadas/request/list-request/parameters.yaml#/1'
        - $ref: './llamadas/request/list-request/parameters.yaml#/2'
        - $ref: './llamadas/request/list-request/parameters.yaml#/3'
        - $ref: './llamadas/request/list-request/parameters.yaml#/4'
        - $ref: './llamadas/request/list-request/parameters.yaml#/5'
        - $ref: './llamadas/request/list-request/parameters.yaml#/6'
        - $ref: './llamadas/request/list-request/parameters.yaml#/7'
      responses:
        200:
          $ref: './llamadas/request/list-request/list-response.yaml'

    post:
      security: []
      tags:
      - Requests
      summary: CREATE REQUEST
      operationId: createRequest
      description: Creates a new request for digital certificate issuance.</br> <html><blockquote
        style='background-color:#faf3ac; border-color:#DFDFDF; color:#3b3b3b;'><b>?
        Each certificate profile has its own set of fields. Please check the list
        of fields in the <a href='#section/Certificate-Profiles'>Certificate Profiles</a>
        section.</b></blockquote></html>
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReqObject'
        required: false
      responses:
        '201':
          $ref: './llamadas/request/create-responses.yaml#/201'
        '400':
          $ref: './llamadas/request/create-responses.yaml#/400'
        '500':
          $ref: './llamadas/request/create-responses.yaml#/500'
      
      

  /api/v1/requests/{id}:
    get:
      security: []
      tags:
      - Requests
      operationId: getRequest
      summary: GET REQUEST 
      description: Returns full information about a request.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the request
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: './llamadas/request/get-request_responses.yaml#/200'
        '404':
          $ref: './llamadas/request/get-request_responses.yaml#/404'
            
    put:
      security: []
      tags:
      - Requests
      summary: UPDATE REQUEST
      operationId: updateRequest
      description: Updates information about a request.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReqObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/request/update-request_responses.yaml#/200'
        '400':
          $ref: './llamadas/request/update-request_responses.yaml#/400'
        '404':
          $ref: './llamadas/request/update-request_responses.yaml#/404'
        '412':
          $ref: './llamadas/request/update-request_responses.yaml#/412'        
        '500':
          $ref: './llamadas/request/update-request_responses.yaml#/500'


  /api/v1/requests/{id}/cancel:
    delete:
      security: []
      tags:
      - Requests
      summary: CANCEL REQUEST
      operationId: deleteRequest
      description: Change the request status to CANCELLED. Requests can be cancelled
        only if the digital certificate is not issued yet.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: './llamadas/request/cancel-request_responses.yaml#/200'
        '404':
            $ref: './llamadas/request/cancel-request_responses.yaml#/404'
        '412':
            $ref: './llamadas/request/cancel-request_responses.yaml#/412'        

    
  /api/v1/requests/{id}/validate:
    get:
      security: []
      tags:
      - Requests
      summary: VALIDATE REQUEST
      operationId: validateRequest
      description: Validate the request fields.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: './llamadas/request/validate-request_responses.yaml#/200'
        '404':
            $ref: './llamadas/request/validate-request_responses.yaml#/404'
        '412':
            $ref: './llamadas/request/validate-request_responses.yaml#/412'    

      
  /api/v1/requests/{id}/generates_tbs_receipt:
    post:
      security: []
      tags:
      - Requests
      summary: GENERATE RAO DECLARATION
      operationId: postRequest 
      description: "Generates a declaration related to a request that must be signed\
        \ by a RAO.<br> The receipt is signed in the <HTML><a href='#tag/Requests/paths/~1api~1v1~1requests~1{id}~1pl_approve/post'>Approve\
        \ Request</a></HTML> call."
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TBSObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/request/generate_rao.yaml#/200'
        '400':
            $ref: './llamadas/request/generate_rao.yaml#/400'
        '404':
            $ref: './llamadas/request/generate_rao.yaml#/404'   

     
  /api/v1/requests/{id}/generate_document:
    post:
      security: []
      tags:
      - Requests
      summary: GENERATE CONTRACT
      operationId: generateRquest
      description: "Generates a contract associated to a request that must be signed\
        \ by a RAO.<br> The contract is signed in the <HTML><a href='#tag/Requests/paths/~1api~1v1~1requests~1{id}~1pl_approve/post'>approve\
        \ request</a></HTML> call."
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/request/generate_rao.yaml#/200'
        '400':
            $ref: './llamadas/request/generate_rao.yaml#/400'
        '404':
            $ref: './llamadas/request/generate_rao.yaml#/404'   
    

  /api/v1/requests/{id}/pl_upload_document:
    post:
      security: []
      tags:
      - Requests
      summary: UPLOAD DOCUMENT
      operationId: uploadDocument
      description: Upload the required documentation for certificate issuance.
      parameters:
        - $ref: './llamadas/request/upload_document.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/request/upload_document.yaml#/requestBody'
      responses:
        '201':
          $ref: './llamadas/request/upload_document.yaml#/responses/201'
        '412':
          $ref: './llamadas/request/upload_document.yaml#/responses/412'
        '500':
          $ref: './llamadas/request/upload_document.yaml#/responses/500'
     

  /api/v1/requests/{id}/pl_delete_document:
    post:
      security: []
      tags:
      - Requests
      summary: DELETE DOCUMENT
      operationId: deleteDocument
      description: Delete an identification document previously uploaded.
      parameters:
        - $ref: './llamadas/request/delete_document.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/request/delete_document.yaml#/requestBody'
      responses:
        '200':
          $ref: './llamadas/request/delete_document.yaml#/responses/200'
        '404':
          $ref: './llamadas/request/delete_document.yaml#/responses/404'
        '500':
          $ref: './llamadas/request/delete_document.yaml#/responses/500'

     
  /api/v1/requests/{id}/pl_get_document:
    post:
      security: []
      tags:
      - Requests
      summary: GET A DOCUMENT
      operationId: getDocument
      description: Retrieves a request's associated document in Base64 format.
      parameters:
        - $ref: './llamadas/request/get_document.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/request/get_document.yaml#/requestBody'
      responses:
        '200':
          $ref: './llamadas/request/get_document.yaml#/responses/200'
        '404':
          $ref: './llamadas/request/get_document.yaml#/responses/404'
      

  /api/v1/requests/{id}/pl_get_documents:
    get:
      security: []
      tags:
      - Requests
      summary: GET ALL DOCUMENTS
      operationId: getDocuments
      description: Retrieves all uploaded documents associated to a request.
      parameters:
        - $ref: './llamadas/request/get_documents.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/get_documents.yaml#/responses/200'
        '404':
          $ref: './llamadas/request/get_documents.yaml#/responses/404'


  /api/v1/requests/{id}/pl_approve:
    post:
      security: []
      tags:
      - Requests
      summary: APPROVE REQUEST
      operationId: approveRequest
      description: Approval of a request by a RAO. At this moment the RAO will sign
        the receipt and the contract.
      parameters:
        - $ref: './llamadas/request/approve.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/request/approve.yaml#/requestBody'
      responses:
        '200':
          $ref: './llamadas/request/approve.yaml#/responses/200'
        '400':
          $ref: './llamadas/request/approve.yaml#/responses/400'
        '404':
          $ref: './llamadas/request/approve.yaml#/responses/404'
        '412':
          $ref: './llamadas/request/approve.yaml#/responses/412'
        '500':
          $ref: './llamadas/request/approve.yaml#/responses/500'

     
  /api/v1/requests/{id}/preauthlink:
    post:
      security: []
      tags:
      - Requests
      summary: GET PRE-AUTHENTICATION LINK
      operationId: preAuthentication
      description: Get the pre-authenticated link to start the online certificate
        generation process for a specific request.  
      parameters:
        - $ref: './llamadas/request/pre_authentication.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/pre_authentication.yaml#/responses/200'
        '403':
          $ref: './llamadas/request/pre_authentication.yaml#/responses/403'
        '404':
          $ref: './llamadas/request/pre_authentication.yaml#/responses/404'

     
  /api/v1/requests/is_renewable:
    post:
      security: []
      tags:
      - Requests
      summary: IS RENEWABLE
      operationId: isRenewal
      description: Find out about whether a request is renewable or not.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsRenScrObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/request/is_renewal.yaml#/responses/200'
        '400':
          $ref: './llamadas/request/is_renewal.yaml#/responses/400'
        '412':
          $ref: './llamadas/request/is_renewal.yaml#/responses/412'


  /api/v1/requests/{id}/enable_renewal:
    post:
      security: []
      tags:
      - Requests
      summary: ENABLE RENEWAL
      operationId: enableRequest
      description: Activates the renewal option for a certificate
      parameters:
        - $ref: './llamadas/request/enable_renewal.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/enable_renewal.yaml#/responses/200'
        '404':
          $ref: './llamadas/request/enable_renewal.yaml#/responses/404'
        '412':
          $ref: './llamadas/request/enable_renewal.yaml#/responses/412'
     

  /api/v1/requests/{id}/disable_renewal:
    post:
      security: []
      tags:
      - Requests
      summary: DISABLE RENEWAL
      operationId: disableRquest
      description: Deactivates the renewal option for a certificate
      parameters:
        - $ref: './llamadas/request/disable_renewal.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/disable_renewal.yaml#/responses/200'
        '404':
          $ref: './llamadas/request/disable_renewal.yaml#/responses/404'

     
  /api/v1/requests/{id}/renewal_status:
    get:
      security: []
      tags:
      - Requests
      summary: GET RENEWAL STATUS
      operationId: renewalRequest
      description: Displays information about renewal status of a request
      parameters:
        - $ref: './llamadas/request/renewal_status.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/renewal_status.yaml#/responses/200'


  /api/v1/requests/check_contact_data_limits:
    post:
      security: []
      tags:
      - Requests
      operationId: check_contract
      summary: CHECK CONTACT DATA
      description: Checks if the given contact data is already in use.
      requestBody:
        $ref: './llamadas/request/check_contract.yaml#/requestBody'
      responses:
        '200':
          $ref: './llamadas/request/check_contract.yaml#/responses/200'


  /api/v1/requests/{id}/generate_otp_for_unlock:
    post:
      security: []
      tags:
      - Requests
      summary: OTP FOR RESET/UNLOCK PIN
      operationId: genereate_otp
      description: Sends an OTP code via SMS for PIN reset or unlock.
      parameters:
        - $ref: './llamadas/request/generate_otp.yaml#/parameters/0'
      responses:
        '200':
          $ref: './llamadas/request/generate_otp.yaml#/responses/200'
        '500':
          $ref: './llamadas/request/generate_otp.yaml#/responses/500'
     

  /api/v1/requests/{id}/unlock_pin:
    post:
      security: []
      tags:
      - Requests
      summary: RESET/UNLOCK PIN
      operationId: unlock_pin
      description: Performs the PIN reset or unlock operation
      parameters:
      - name: id
        in: path
        description: The unique identifier of the Request
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPinObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/request/unlock_pin.yaml#/200'
        '500':
          $ref: './llamadas/request/unlock_pin.yaml#/500'


          



     
  /api/v1/scratchcards:
    get:
      security: []
      tags:
        - Scratchcards
      summary: LIST SCRATCHCARDS
      operationId: listScratchcards
      description: Gets the list of scratchcards
      parameters:
        - name: registration_authority
          in: query
          description: Registration authority number
          schema:
            type: string
        - name: sn
          in: query
          description: Number of scratchcard
          schema:
            type: string
      responses:
        '200':
          $ref: './llamadas/scratchcards/list_scratchcards.yaml#/200'

     

  /api/v1/scratchcards/{id}:
    get:
      security: []
      tags:
        - Scratchcards
      summary: GET SCRATCHCARD
      operationId: getScratchcard
      description: Get details from a scratchcard.
      parameters:
        - name: id
          in: path
          description: The scratchcard unique id
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: './llamadas/scratchcards/get_scratchcards.yaml#/200'
        '404':
          $ref: './llamadas/scratchcards/get_scratchcards.yaml#/404'

      
  /api/v1/scratchcards/get_first_unused:
    get:
      security: []
      tags:
      - Scratchcards
      summary: GET FIRST UNUSED SCRATCHCARD
      description: Get first unused scratchcard.
      operationId: getFirstUnused
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FUScrObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/scratchcards/get_first_unused.yaml#/200'
        '400':
          $ref: './llamadas/scratchcards/get_first_unused.yaml#/400'


  /api/v1/scratchcards/isused:
    post:
      security: []
      tags:
      - Scratchcards
      summary: IS USED SCRATCHCARD
      operationId: isused
      description: Get the status of a known scratchcard.
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IUScrObject'
        required: true
      responses:
        '200':
          $ref: './llamadas/scratchcards/isued.yaml#/200'
        '400':
          $ref: './llamadas/scratchcards/isued.yaml#/400'
        '500':
          $ref: './llamadas/scratchcards/isued.yaml#/500'

     
  /api/v1/scratchcards/revoke:
    post:
      security: []
      tags:
      - Scratchcards
      operationId: revokeScratchcard
      summary: REVOKE SCRATCHCARD
      description: "Revoke, suspend or activate certificates associated to the request\
        \ that use the specified scratchcard."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/REVScrObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/scratchcards/revoke.yaml#/200'
        '400':
          $ref: './llamadas/scratchcards/revoke.yaml#/400'
        '412':
          $ref: './llamadas/scratchcards/revoke.yaml#/412'
        '500':
          $ref: './llamadas/scratchcards/revoke.yaml#/500'


  /api/v1/scratchcards/whoami:
    post:
      security: []
      tags:
      - Scratchcards
      summary: WHOAMI
      operationId: whoami
      description: Get the request associated to the scratchcard.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WhoScrObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/scratchcards/whoami.yaml#/200'
        '400':
          $ref: './llamadas/scratchcards/whoami.yaml#/400'
        '412':
          $ref: './llamadas/scratchcards/whoami.yaml#/412'

      
  /api/v1/scratchcards/move:
    post:
      security: []
      tags:
      - Scratchcards
      summary: MOVE SCRATCHCARDS
      operationId: move
      description: Move scratchcards from an ra to another one.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveScrObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/scratchcards/move.yaml#/200'
        '403':
          $ref: './llamadas/scratchcards/move.yaml#/403'
        '500':
          $ref: './llamadas/scratchcards/move.yaml#/500'






     
  /api/v1/registrationauthorities:
    get:
      security: []
      tags:
       - Registration Authority
      summary: LIST RAs
      operationId: listRA
      description: Get the list of registration authorities
      responses:
        200:
          $ref: './llamadas/RA/list-responses.yaml'

    post:
      security: []
      tags:
      - Registration Authority
      summary: CREATE RA
      operationId: create
      description: Create a new registration authority.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateRAObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/RA/create-responses.yaml#/200'
        '400':
          $ref: './llamadas/RA/create-responses.yaml#/400'
        '500':
          $ref: './llamadas/RA/create-responses.yaml#/500'
    

  /api/v1/registrationauthorities/{id}:
    get:
      security: []
      tags:
        - Registration Authority
      summary: GET RA
      operationId: getRA
      description: Gets data from a specific RA.
      parameters:
        - name: id
          in: path
          description: The id of the registration authority
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: './llamadas/RA/get-responses.yaml#/200'
        '500':
          $ref: './llamadas/RA/get-responses.yaml#/500'
    
    put:
      security: []
      tags:
      - Registration Authority
      summary: UPDATE RA
      operationId: updateRA
      description: Update the info about a registration authority.
      parameters:
      - name: id
        in: path
        description: The id of the registration authority
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateRAObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/RA/put-responses.yaml#/200'
        '400':
          $ref: './llamadas/RA/put-responses.yaml#/400'
        '500':
          $ref: './llamadas/RA/put-responses.yaml#/500'


    



  /api/v1/rao:
    get:
      security: []
      tags:
      - Registration Authority Officer
      summary: LIST RAOs
      operationId: listRAO
      description: "Get the list of RAOs. The result can be filtered with the following\
        \ query parameters: given_name, surname_1, surname_2, certificate, registration_authority,\
        \ registration_authority_master"
      parameters:
        - $ref: './llamadas/RAO/list-parameters.yaml#/0'
        - $ref: './llamadas/RAO/list-parameters.yaml#/1'
        - $ref: './llamadas/RAO/list-parameters.yaml#/2'
      responses:
        200:
          $ref: './llamadas/RAO/list-responses.yaml'

    post:
      security: []
      tags:
      - Registration Authority Officer
      summary: CREATE RAO
      operationId: createRAO
      description: Create a new registration authority officer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRAOObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/RAO/create-responses.yaml#/200'
        '400':
          $ref: './llamadas/RAO/create-responses.yaml#/400'
        '500':
          $ref: './llamadas/RAO/create-responses.yaml#/500'

     
  /api/v1/rao/{id}:
    get:
      security: []
      tags:
      - Registration Authority Officer
      summary: GET RAO
      operationId: getRAO
      description: Get information about a RAO.
      parameters:
      - name: id
        in: path
        description: The RAO's unique identifier
        required: true
        schema:
          type: string
      responses: 
        '200':
          $ref: './llamadas/RAO/get-responses.yaml#/200'
        '500':
          $ref: './llamadas/RAO/get-responses.yaml#/500'

    put:
      security: []
      tags:
      - Registration Authority Officer
      summary: UPDATE RAO
      operationId: updateRAO
      description: Update information about a RAO.
      parameters:
      - name: id
        in: path
        description: The RAO's unique identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRAOObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/RAO/update-responses.yaml#/200'
        '400':
          $ref: './llamadas/RAO/update-responses.yaml#/400'
        '500':
          $ref: './llamadas/RAO/update-responses.yaml#/500'



          

          
  /api/v1/users:
    get:
      security: []
      tags:
      - Users
      summary: LIST USERS
      operationId: listUsers
      description: Gets the list of users.
      responses:
        '200':
          $ref: './llamadas/Users/list-responses.yaml'

    post:
      security: []
      tags:
      - Users
      summary: CREATE USER
      operationId: createUsers
      description: Create a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/Users/create-responses.yaml#/200'
        '400':
          $ref: './llamadas/Users/create-responses.yaml#/400'
        '500':
          $ref: './llamadas/Users/create-responses.yaml#/500'
        

  /api/v1/users/{id}:
    get:
      security: []
      tags:
      - Users
      summary: GET USER
      operationId: getUser
      description: Get information about an user.
      parameters:
      - name: id
        in: path
        description: The User's unique identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: './llamadas/Users/get-responses.yaml#/200'
        '500':
          $ref: './llamadas/Users/get-responses.yaml#/500'

    put:
      security: []
      tags:
      - Users
      summary: UPDATE USER
      operationId: updateUser
      description: Update a new user.
      parameters:
      - name: id
        in: path
        description: The User's unique identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserObject'
        required: false
      responses:
        '200':
          $ref: './llamadas/Users/update-responses.yaml#/200'
        '400':
          $ref: './llamadas/Users/update-responses.yaml#/400'
        '500':
          $ref: './llamadas/Users/update-responses.yaml#/500'
      



      

  /api/v1/requests/{id_request}/upload_videoid_evidence:
    post:
      security: []
      tags:
      - eIDAS VideoID
      operationId: uploadDocumentVideoID
      summary: UPLOAD DOCUMENT
      description: Upload the required documentation for certificate issuance.
      parameters:
        - $ref: './llamadas/eIDASVideo/upload-request.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/eIDASVideo/upload-request.yaml#/requestBody'
      responses:
        '201':
          $ref: './llamadas/eIDASVideo/upload-request.yaml#/responses/201'

      




  /api/v1/requests/{id_request}/validate_videoid:
    post:
      security: []
      tags:
      - External VideoID
      summary: VALIDATE VIDEO ID REQUEST
      operationId: externalVideoID
      description: Validation of a Video ID Request
      parameters:
      - name: id_request
        in: path
        description: The Request unique identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateReqObject_VID'
        required: false
      responses:
        '200':
          $ref: './llamadas/ExternalVideo/validate-responses.yaml#/200'
        '400':
          $ref: './llamadas/ExternalVideo/validate-responses.yaml#/400'  
        '412':
          $ref: './llamadas/ExternalVideo/validate-responses.yaml#/412'
        '500':
          $ref: './llamadas/ExternalVideo/validate-responses.yaml#/500'

          
  /api/v1/requests/{id_request}/refuse_videoid:
    post:
      security: []
      tags:
      - External VideoID
      summary: REFUSE REQUEST
      operationId: refuse
      description: Refuse validation for a Video ID Request
      parameters:
      - name: id_request
        in: path
        description: The Request unique identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateReqObject_VID'
        required: false
      responses:
        '200':
          $ref: './llamadas/ExternalVideo/refuse-responses.yaml#/200'
        '400':
          $ref: './llamadas/ExternalVideo/refuse-responses.yaml#/400'  
        '412':
          $ref: './llamadas/ExternalVideo/refuse-responses.yaml#/412'
        '500':
          $ref: './llamadas/ExternalVideo/refuse-responses.yaml#/500'

     
  /api/v1/videoid/{video_pk}:
    put:
      security: []
      tags:
      - External VideoID
      summary: UPLOAD DATA EVIDENCE
      operationId: uploadData
      description: Upload Request associated data
      parameters:
        $ref: './llamadas/ExternalVideo/upload-parameters.yaml'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadData_VID'
        required: false
      responses:
        "200":
          description: Successful Response
          content: {}

     
  /api/v1/upload/video/{video_identifier}:
    post:
      security: []
      tags:
        - External VideoID
      summary: UPLOAD VIDEO
      operationId: uploadVideo
      description: Upload Request associated video
      parameters:
        - $ref: './llamadas/ExternalVideo/upload-video.yaml#/parameters/0'
      requestBody:
        $ref: './llamadas/ExternalVideo/upload-video.yaml#/requestBody'
      responses:
        '200':
          $ref: './llamadas/ExternalVideo/upload-video.yaml#/responses/200'
        '400':
          $ref: './llamadas/ExternalVideo/upload-video.yaml#/responses/400'

    
  /api/v1/download/video/{video_identifier}:
    get:
      security: []
      tags:
      - External VideoID
      summary: DOWNLOAD VIDEO
      operationId: downloadVideo
      description: Download mp4-format binary video file associated to a Request
      parameters:
      - name: video_identifier
        in: path
        description: The Request unique identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content: {}

      
components:
  schemas:
    CreateReqObject:
      required:
      - email
      - profile
      - registration_authority
      - scratchcard
      type: object
      properties:
        profile:
          type: string
          description: Certificate profile
        validity_time:
          type: number
          description: Validity time for the certificate (value in days). Values are
            subject to the certificate profile that is being used.
        scratchcard:
          type: string
          description: Available and unused scratchcard serial number. The first unused
            scratchcard serial number can be obtained in the <HTML><a href='#tag/Scratchcards/paths/~1api~1v1~1scratchcards~1get_first_unused/get'>Get
            first unused</a></HTML> call
        secure_element:
          type: string
          description: "Can be 0, 1 or 2 which stands respectively to Software, Smartcard\
            \ and Cloud"
        registration_authority:
          type: string
          description: The unique identifier (PK) of the RA (it's assigned when is
            created)
        identification_rao:
          type: number
          description: "The ID of Operator in charge of identifying, this Operator\
            \ has to be registered as 'Identification RAO' in the respective Registration\
            \ Authority. You are able to check it through <HTML><a href='#tag/Registration-Authority-Officer/paths/~1api~1v1~1rao~1%7Bid%7D/get'>Get\
            \ RAO</a></HTML> call response, explicitly in **is_identificator** field.\
            \ **This field is required if the approval Operator is not the same as\
            \ the identifier**"
        country_name:
          type: string
          description: The country where the RA is registered
        serial_number:
          type: string
          description: The user's document serial number
        id_document_country:
          type: string
          description: The user's id document country two-letters code (ISO 3166-1
            alpha-2)
        id_document_type:
          type: string
          description: The user's document type
        given_name:
          type: string
          description: The user's given name
        surname_1:
          type: string
          description: The user's first surname
        surname_2:
          type: string
          description: The user's second surname
        email:
          type: string
          description: The user's email
        mobile_phone_number:
          type: string
          description: The user's mobile phone number
        paperless_mode:
          type: number
          description: This parameter must be included and set to 1 for a classic
            certificate request
        videoid_mode:
          type: number
          description: This parameter must be included and set to 1 for a Video ID
            certificate request
        webhook_url:
          type: string
          description: "The webhook associated URL. </br> <blockquote style='background-color:\
            \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;'><b>? Not required for\
            \ external authentication. See <a href='#section/Webhook-Configuration'>Webhook\
            \ Configuration</a> section</b></blockquote>"
    UpdateReqObject:
      required:
      - country_name
      - email
      - profile
      - registration_authority
      - scratchcard
      type: object
      properties:
        profile:
          type: string
          description: Certificate profile
        scratchcard:
          type: string
          description: Available and unused scratchcard serial number. The first unused
            scratcard serial number can be obtained in the <HTML><a href='#tag/Scratchcards/paths/~1api~1v1~1scratchcards~1get_first_unused/get'>Get
            first unused</a></HTML> call
        secure_element:
          type: string
          description: "Can be 0, 1 or 2 which stands respectively to Software, Smartcard\
            \ and Cloud"
        registration_authority:
          type: string
          description: The unique identifier (PK) of the RA (it's assigned when is
            created)
        country_name:
          type: string
          description: The country where the RA is registered
        serial_number:
          type: string
          description: The user's document serial number
        id_document_country:
          type: string
          description: The user's id document country two-letters code (ISO 3166-1
            alpha-2)
        id_document_type:
          type: string
          description: The user's document type
        given_name:
          type: string
          description: The user's given name
        surname_1:
          type: string
          description: The user's first surname
        surname_2:
          type: string
          description: The user's second surname
        email:
          type: string
          description: The user's email
        mobile_phone_number:
          type: string
          description: The user's mobile phone number
        paperless_mode:
          type: number
          description: This parameter must be included and set to 1 for a classic
            certificate request
        videoid_mode:
          type: number
          description: This parameter must be included and set to 1 for a Video ID
            certificate request
    TBSObject:
      required:
      - rao
      - type
      type: object
      properties:
        rao:
          type: string
          description: The unique identifier of the RAO that will sign and approve
            the request
        type:
          type: string
          description: The type of the receipt to generate
          enum:
          - APPROVE
    ContractObject:
      type: object
      properties:
        doctype:
          type: string
          description: The contract type
          enum:
          - contract
          - contract_renew
          
    ApproveReqObject:
      type: object
      properties:
        rao:
          type: string
          description: The unique identifier of the RAO that will sign and approve
            the request
        receipt:
          type: string
          description: The signed receipt as a Base64 formatted string
    CloudEnrObject:
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard number of the request to be enrolled
        erc:
          type: string
          description: The enrollment code associated to the scratchcard
        pin:
          type: string
          description: "A new PIN code to assign. Must contain at least 2 letters,\
            \ 2 numbers and must be at least 8 characters long"
        puk:
          type: string
          description: "A new puk to assign. Must contain at least 2 letters, 2 numbers\
            \ and must be at least 8 characters long"
    SoftEnrObject:
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard number of the request to be enrolled
        enrollment_code:
          type: string
          description: The enrollment code associated to the scratchcard
    PlApproveReqObject:
      required:
      - password
      - pin
      - rao_id
      - username
      type: object
      properties:
        username:
          type: string
          description: The RAO's username
        password:
          type: string
          description: The RAO's password
        pin:
          type: string
          description: The RAO's PIN
        rao_id:
          type: string
          description: The RAO's id
        lang:
          type: string
          description: The contract language
    PlCloudEnrObject:
      type: object
      properties:
        secret:
          type: string
          description: The OTP code sent to the client via SMS
        pin:
          type: string
          description: "The PIN code created by the client (must contain at least\
            \ 2 letters, 2 numbers and must be at least 8 characters long)"
    PlSoftEnrObject:
      type: object
      properties:
        secret:
          type: string
          description: The OTP code sent to the client via SMS
        p12password:
          type: string
          description: "The PIN code created by the client (must contain at least\
            \ 2 letters, 2 numbers and must be at least 8 characters long)"
    GenOTPObject:
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard serial number
    GenOTPforQS:
      type: object
      properties:
        pin:
          type: string
          description: "The PIN code created by the client (must contain at least\
            \ 2 letters, 2 numbers and must be at least 8 characters long)"
        puk:
          type: string
          description: "The PUK code created by the client (must contain at least\
            \ 2 letters, 2 numbers and must be at least 8 characters long)"
    CreateScrObject:
      type: object
      properties:
        sn:
          type: string
          description: The scratchcard serial number
        registration_authority:
          type: string
          description: The registration authority id
        secret:
          type: object
          properties:
            erc:
              type: string
              description: Security code used for recovery or revocation purpose
            enrollment_code:
              type: string
              description: Security code requested for different operations (like
                certificate enrollment)
            pin:
              type: string
              description: Default pin assigned to the scratchcard. This will be changed
                in the enrollment phase.
            puk:
              type: string
              description: Default puk assigned to the scratchcard. This will be changed
                in the enrollment phase.
    UpdScrObject:
      type: object
      properties:
        sn:
          type: string
          description: 'The scratchcard serial number  '
        registration_authority:
          type: string
          description: The registration authority id
        secret:
          type: object
          properties:
            erc:
              type: object
              properties:
                erc:
                  type: string
                  description: Security code used for recovery or revocation purpose
                enrollment_code:
                  type: string
                  description: Security code requested for different operations (like
                    certificate enrollment)
                pin:
                  type: string
                  description: Default PIN assigned to the scratchcard. This will
                    be changed in the enrollment phase.
                puk:
                  type: string
                  description: Default PUK assigned to the scratchcard. This will
                    be changed in the enrollment phase.
    FUScrObject:
      type: object
      properties:
        ra:
          type: string
          description: The registration authority id
    IUScrObject:
      type: object
      properties:
        sn:
          type: string
          description: The scratchcard id number
    REVScrObject:
      required:
      - erc
      - reason
      - scratchcard
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard id number
        erc:
          type: string
          description: The scratchcard revocation code
        reason:
          type: string
          description: "The reason associated to the scratchcard revocation:\n * **UNSPECIFIED**\
            \ - Unspecified reason\n * **KEYCOMPROMISE** - Compromised keys\n * **AFFILIATIONCHANGED**\
            \ - Affiliation changed\n * **SUPERSEDED** - Superseded\n * **CESSATIONOFOPERATION**\
            \ - Ceased\n * **PRIVILEGESWITHDRAWN** - Privileges withdrawn\n \nThe\
            \ reason to suspend or activate a certificate when this is suspended:\n\
            \ * **CERTIFICATEHOLD** - Suspend a certificate\n * **NOT_REVOKED** -\
            \ Activate a certificate that was suspended\n \n"
          enum:
          - UNSPECIFIED
          - KEYCOMPROMISE
          - AFFILIATIONCHANGED
          - SUPERSEDED
          - CESSATIONOFOPERATION
          - PRIVILEGESWITHDRAWN
          - CERTIFICATEHOLD
          - NOT_REVOKED
    WhoScrObject:
      required:
      - erc
      - scratchcard
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard id number
        erc:
          type: string
          description: The scratchcard enrollment code (password for accessing Uanataca
            services)
    MoveScrObject:
      required:
      - amount
      - from_ra
      - from_sn
      - to_ra
      - to_sn
      type: object
      properties:
        from_ra:
          type: string
          description: "The source RA id that will give the scratchcards </br> <blockquote\
            \ style=\"background-color: #faf3ac; border-color: #5a5a5a; color: #3b3b3b;\"\
            ><b>? If from_ra/to_ra is used, from_sn/to_sn cannot be used</b></blockquote>"
        to_ra:
          type: string
          description: "The destination RA id that will receive the scratchcards </br>\
            \ <blockquote style=\"background-color: #faf3ac; border-color: #5a5a5a;\
            \ color: #3b3b3b;\"><b>? If from_ra/to_ra is used, from_sn/to_sn cannot\
            \ be used</b></blockquote>"
        amount:
          type: string
          description: The amount of scratchcards to be transferred
        from_sn:
          type: string
          description: "The scratchcard starting id </br> <blockquote style=\"background-color:\
            \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;\"><b>? If from_sn/to_sn\
            \ is used, from_ra/to_ra cannot be used</b></blockquote>"
        to_sn:
          type: string
          description: "The scratchcard ending id </br> <blockquote style=\"background-color:\
            \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;\"><b>? If from_sn/to_sn\
            \ is used, from_ra/to_ra cannot be used</b></blockquote>"
    IsRenScrObject:
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard number of the request
        erc:
          type: string
          description: The scratchcard enrollment code of the request
    ClRenScrObject:
      type: object
      properties:
        username:
          type: string
          description: The username associated to the request to be renewed
        password:
          type: string
          description: The password associated to the request to be renewed
        pin:
          type: string
          description: The PIN associated to the request to be renewed
    SoRenScrObject:
      type: object
      properties:
        username:
          type: string
          description: The username associated to the request to be renewed
        password:
          type: string
          description: The password associated to the request to be renewed
        pin:
          type: string
          description: The PIN associated to the request to be renewed
    ResetPinObject:
      type: object
      properties:
        scratchcard:
          type: string
          description: The scratchcard number (username) associated to the request
        enrollment_code:
          type: string
          description: The scratchcard enrollment code of the request
        newpin:
          type: string
          description: The new pin
        otp:
          type: string
          description: The OTP code sent to the user via SMS
    CreateRAObject:
      required:
      - name
      - parent
      type: object
      properties:
        name:
          type: string
          description: The RA name
        parent:
          type: string
          description: The RA parent unique id
        enabled_from:
          type: string
          description: The date when the RA will be enabled from (the format is YYYY-MM-DD)
        enabled_until:
          type: string
          description: The date when the RA will be no longer enabled (the format
            is YYYY-MM-DD)
        organization_tax_number:
          type: string
          description: The tax number of the organization
        organization_name:
          type: string
          description: The organization name
        responsible_name:
          type: string
          description: The RA responsible given name
        responsible_first_surname:
          type: string
          description: The RA responsible first surname
        responsible_second_surname:
          type: string
          description: The RA responsible second surname
        responsible_serial:
          type: string
          description: The RA responsible serial number
        email:
          type: string
          description: A valid email address
        fix_phone_number:
          type: string
          description: A mobile phone number
        address:
          type: string
          description: The city address
        city:
          type: string
          description: The city where the RA is located
        postal_code:
          type: string
          description: The postal code of the city where the RA is located
        province:
          type: string
          description: The province of the city where the RA is located
        url:
          type: string
          description: A web url of the RA
        country:
          type: string
          description: The country where the RA is located
        enable_external_auth:
          type: boolean
          description: VideoID external authentication mode enabling/disabling check
        videoid_enabled:
          type: boolean
          description: VideoID enabling/disabling check
        videoid_provider:
          type: integer
          description: VideoID provider indicator
    UpdateRAObject:
      required:
      - name
      - parent
      type: object
      properties:
        name:
          type: string
          description: The RA name
        parent:
          type: string
          description: The RA parent unique id
        enabled_from:
          type: string
          description: The date when the RA will be enabled from (the format is YYYY-MM-DD)
        enabled_until:
          type: string
          description: The date when the RA will be no longer enabled (the format
            is YYYY-MM-DD)
        organization_tax_number:
          type: string
          description: The tax number of the organization
        organization_name:
          type: string
          description: The organization name
        responsible_name:
          type: string
          description: The RA responsible given name
        responsible_first_surname:
          type: string
          description: The RA responsible first surname
        responsible_second_surname:
          type: string
          description: The RA responsible second surname
        responsible_serial:
          type: string
          description: The RA responsible serial number
        email:
          type: string
          description: A valid email address
        fix_phone_number:
          type: string
          description: A mobile phone number
        address:
          type: string
          description: The city address
        city:
          type: string
          description: The city where the RA is located
        postal_code:
          type: string
          description: The postal code of the city where the RA is located
        province:
          type: string
          description: The province of the city where the RA is located
        url:
          type: string
          description: A web url of the RA
        country:
          type: string
          description: The country where the RA is located
        enable_external_auth:
          type: boolean
          description: VideoID external authentication mode enabling/disabling check
        videoid_enabled:
          type: boolean
          description: VideoID enabling/disabling check
        videoid_provider:
          type: integer
          description: VideoID provider indicator
    UpdateRAOObject:
      required:
      - certificate
      - given_name
      - registration_authority
      - registration_authority_master
      - surname_1
      type: object
      properties:
        registration_authority_master:
          type: string
          description: The registration authority master id
        registration_authority:
          type: string
          description: 'The list of the RAs where the RAO can operate  '
        certificate:
          type: string
          description: The Request certificate in Base64 format
        given_name:
          type: string
          description: The RAO's name
        surname_1:
          type: string
          description: The RAO's first surname
        surname_2:
          type: string
          description: The RAO's second surname
        id_document_number:
          type: string
          description: The RAO's document number
        id_document_issuer:
          type: string
          description: The document issuer
        email:
          type: string
          description: A valid email address
    CreateUserObject:
      required:
      - permission_profile
      - rao
      - registration_authority
      - request
      type: object
      properties:
        registration_authority:
          type: string
          description: The registration authority id
        permission_profile:
          type: string
          description: The permission profile id that will be associated to this user
        request:
          type: string
          description: The request id
        rao:
          type: string
          description: The RAO id
    UpdateUserObject:
      required:
      - registration_authority
      type: object
      properties:
        registration_authority:
          type: string
          description: The registration authority id
        permission_profile:
          type: string
          description: The permission profile id that will be associated to this user
        request:
          type: string
          description: The request id
        rao:
          type: string
          description: The RAO id
    ValidateReqObject_VID:
      required:
      - password
      - pin
      - rao_id
      - username
      type: object
      properties:
        username:
          type: string
          description: The RAO's username
        password:
          type: string
          description: The RAO's password
        pin:
          type: string
          description: The RAO's pin
        rao_id:
          type: string
          description: The RAO's id
    RefuseReqObject_VID:
      required:
      - password
      - pin
      - rao_id
      - username
      type: object
      properties:
        username:
          type: string
          description: The RAO's username
        password:
          type: string
          description: The RAO's password
        pin:
          type: string
          description: The RAO's pin
        rao_id:
          type: string
          description: The RAO's id
        reason:
          type: string
          description: Reason that caused VideoID refusal
    UploadData_VID:
      type: object
      properties:
        acceptance:
          type: object
          properties:
            description:
              type: string
              description: Terms and Conditions descriptive text
            url-doc-privacypolicy:
              type: string
              description: Privacy policy document URL
            ip:
              type: string
              description: The local IP adress
            url-web-videoid:
              type: string
              description: Video ID platform access URL
            user-agent:
              type: string
              description: A user agent (e.g. web browser)
            date:
              type: string
              description: The current date
            url-doc-termsconditions:
              type: string
              description: Terms and conditions document URL
          description: "A set of acceptance parameters. </br> <blockquote style='background-color:\
            \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;'><b>? Customizable object\
            \ for external authentication.</b></blockquote>"
        videoid_data:
          type: object
          properties:
            images:
              type: object
              properties:
                document_front:
                  type: string
                  description: Base64 document front image
                document_rear:
                  type: string
                  description: Base64 document rear image
                document_photo:
                  type: string
                  description: Base64 document client picture (extracted from document)
                document_owner:
                  type: string
                  description: Base64 client selfie
              description: Document images
            ocr_data:
              type: object
              properties:
                given_name:
                  type: string
                  description: The user's given name
                surname_1:
                  type: string
                  description: The user's first surname
                surname_2:
                  type: string
                  description: The user's second surname
                mobile_phone_number:
                  type: string
                  description: The user's mobile phone number
                email:
                  type: string
                  description: The user's email
                serial_number:
                  type: string
                  description: The user's document serial number
                id_document_type:
                  type: string
                  description: "Document types allowed for user identification: \n\
                    \ - **IDC** - Identification based on national identity card number\
                    \ \n - **PAS** - Identification based on passport number \n -\
                    \ **PNO** - Identification based on national personal number (national\
                    \ civic registration number) \n - **TIN** - Tax Identification\
                    \ Number according to the European Commission"
                  enum:
                  - IDC
                  - PAS
                  - PNO
                  - TIN
                id_document_country:
                  type: string
                  description: The user's id document country two-letters code (ISO
                    3166-1 alpha-2)
              description: "Optical Character Recognition result <blockquote style='background-color:\
                \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;'><b>? Customizable\
                \ object for external authentication.</b></blockquote>"
            security_checks:
              type: object
              properties:
                otp_validation:
                  type: boolean
                  description: OTP code validation check
                documents_match:
                  type: boolean
                  description: Documents matching official registers check
                data_integrity:
                  type: boolean
                  description: Document data is not corrupted check
                document_notcopy:
                  type: boolean
                  description: Document is not a copy check
                document_notexpired:
                  type: boolean
                  description: Document is not expired check
                document_notunderage:
                  type: boolean
                  description: The user is not underage check
                liveliness:
                  type: boolean
                  description: The user is real check
              description: "Security checks related to document integrity <blockquote\
                \ style='background-color: #faf3ac; border-color: #5a5a5a; color:\
                \ #3b3b3b;'><b>? Customizable object for external authentication.</b></blockquote>"
            similarity_level:
              type: integer
              description: "Level of similarity between document picture and face\
                \ selfie. Ranges in [0,100]."
          description: "Data to upload for Video ID <blockquote style='background-color:\
            \ #faf3ac; border-color: #5a5a5a; color: #3b3b3b;'><b>? Customizable object\
            \ for external authentication.</b></blockquote>"
